from dotenv import load_dotenv
import os

load_dotenv()


class Config:
    MARZBAN_BASE_URL = os.getenv("MARZBAN_BASE_URL", "https://example.com/api").strip()
    MARZBAN_USERNAME = os.getenv("MARZBAN_USERNAME", "admin").strip()
    MARZBAN_PASSWORD = os.getenv("MARZBAN_PASSWORD", "PASSWORD").strip()
    TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN", "TOKEN").strip()
    TELEGRAM_CHAT_ID = os.getenv("TELEGRAM_CHAT_ID", "-1002178231").strip()
    TELEGRAM_THREAD_CHAT_ID = os.getenv("TELEGRAM_THREAD_CHAT_ID", "").strip()
    REDIS_HOST = os.getenv("REDIS_HOST", "redis").strip()
    REDIS_PORT = int(os.getenv("REDIS_PORT", 6379).strip())
    REDIS_DB = int(os.getenv("REDIS_DB", 1).strip())
    REDIS_PASSWORD = os.getenv("REDIS_PASSWORD", "PASSWORD").strip()
    LOG_LEVEL = os.getenv("LOG_LEVEL", "DEFAULT").strip().upper()
    VALID_LOG_LEVELS = {"DEBUG", "INFO"}

    if LOG_LEVEL not in VALID_LOG_LEVELS:
        LOG_LEVEL = "INFO"


class Responses:
    LANG = os.getenv("LANG", "ru")

    MESSAGES = {
        "ru": {
            "MONITOR_START": (
                "‚úÖ <b>–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –Ω–∞—á–∞–ª—Å—è.</b>\n\n"
                "<i>–ü—Ä–æ–≤–µ—Ä–∫–∞ —É–∑–ª–æ–≤ –∑–∞–ø—É—â–µ–Ω–∞...</i>\n"
                "<code>---------------------------------</code>\n\n"
            ),
            "SUCCESS_MONITOR_START": (
                "‚úÖ <b>–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –Ω–∞—á–∞–ª—Å—è.</b>\n\n"
                "<b>–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–∑–ª–æ–≤:</b> {node_count}\n\n"
                "<i>–ü—Ä–æ–≤–µ—Ä–∫–∞ —É–∑–ª–æ–≤ –∑–∞–ø—É—â–µ–Ω–∞...</i>\n"
                "<code>---------------------------------</code>\n\n"
            ),
            "SUCCESS_NODE_RECONNECTED": (
                "üü¢ <b>–£–∑–µ–ª –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω</b>\n\n"
                "<b>–£–∑–µ–ª:</b> <code>{node_name}</code>\n\n"
                #"<b>IP:</b> <code>{node_ip}</code>\n\n"
                "<code>---------------------------------</code>\n"
                "<b>–í—Ä–µ–º—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è:</b> {timestamp}\n"
                "<b>–í—Ä–µ–º—è –ø—Ä–æ—Å—Ç–æ—è:</b> {downtime_minutes} –º–∏–Ω—É—Ç\n"
                "<code>---------------------------------</code>\n\n"
            ),
            "SUCCESS_NODE_RECONNECTED_AFTER_ATTEMPTS": (
                "üü¢ <b>–£–∑–µ–ª –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ—Å–ª–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –ø–æ–ø—ã—Ç–æ–∫</b>\n\n"
                "<b>–£–∑–µ–ª:</b> <code>{node_name}</code>\n\n"
                #"<b>IP:</b> <code>{node_ip}</code>\n\n"
                "<code>---------------------------------</code>\n"
                "<b>–í—Ä–µ–º—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è:</b> {timestamp}\n"
                "<b>–í—Ä–µ–º—è –ø—Ä–æ—Å—Ç–æ—è:</b> {downtime_minutes} –º–∏–Ω—É—Ç\n"
                "<b>–ü–æ–ø—ã—Ç–∫–∏ –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:</b> {attempts}\n"
                "<code>---------------------------------</code>\n\n"
            ),
            "ERROR_NODE_DISCONNECTED": (
                "üî¥ <b>[ALERT]</b>\n\n"
                "<b>–£–∑–µ–ª:</b> <code>{node_name}</code>\n\n"
                #"<b>IP:</b> <code>{node_ip}</code>\n\n"
                "<code>---------------------------------</code>\n"
                "<b>–û—à–∏–±–∫–∞:</b> <code>{error_message}</code>\n"
                "<b>–ü–æ–ø—ã—Ç–∫–∞ –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:</b> {timestamp}\n"
                "<code>---------------------------------</code>\n\n"
            ),
            "ERROR_NODE_RECONNECT_ATTEMPT": (
                "‚ö†Ô∏è <b>[–ü–æ–ø—ã—Ç–∫–∞ {attempt}]</b>\n\n"
                "<b>–£–∑–µ–ª:</b> <code>{node_name}</code>\n\n"
                #"<b>IP:</b> <code>{node_ip}</code>\n\n"
                "<code>---------------------------------</code>\n"
                "<b>–ü–æ–ø—ã—Ç–∫–∞ –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:</b> {attempt}/{max_checks}\n"
                "<b>–í—Ä–µ–º—è:</b> {timestamp}\n"
                "<code>---------------------------------</code>\n\n"
            ),
            "ERROR_NODE_RECONNECT_FAILED": (
                "üî¥ <b>[CRITICAL]</b>\n\n"
                "<b>–£–∑–µ–ª:</b> <code>{node_name}</code>\n\n"
                #"<b>IP:</b> <code>{node_ip}</code>\n\n"
                "<code>---------------------------------</code>\n"
                "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–∏—Ç—å —É–∑–µ–ª –ø–æ—Å–ª–µ {attempts} –ø–æ–ø—ã—Ç–æ–∫.\n"
                "<b>–û—à–∏–±–∫–∞:</b> <code>{error_message}</code>\n"
                "<b>–í—Ä–µ–º—è:</b> {timestamp}\n"
                "<code>---------------------------------</code>\n\n"
            ),
            "ERROR_MONITOR_FAILURE": (
                "‚ùó <b>[ERROR]</b>\n\n"
                "<b>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–µ —É–∑–ª–æ–≤.</b>\n\n"
                "<code>---------------------------------</code>\n"
                "<b>–û—à–∏–±–∫–∞:</b> <code>{error_message}</code>\n"
                "<b>–í—Ä–µ–º—è:</b> {timestamp}\n"
                "<code>---------------------------------</code>\n\n"
            ),
        },
        "en": {
            "MONITOR_START": (
                "‚úÖ <b>Monitoring started.</b>\n\n"
                "<i>Node checking started...</i>\n"
                "<code>---------------------------------</code>\n\n"
            ),
            "SUCCESS_MONITOR_START": (
                "‚úÖ <b>Monitoring started.</b>\n\n"
                "<b>Total nodes:</b> {node_count}\n\n"
                "<i>Node checking started...</i>\n"
                "<code>---------------------------------</code>\n\n"
            ),
            "SUCCESS_NODE_RECONNECTED": (
                "üü¢ <b>Node reconnected</b>\n\n"
                "<b>Node:</b> <code>{node_name}</code>\n"
                #"<b>IP:</b> <code>{node_ip}</code>\n\n"
                "<code>---------------------------------</code>\n"
                "<b>Reconnected at:</b> {timestamp}\n"
                "<b>Downtime:</b> {downtime_minutes} minutes\n"
                "<code>---------------------------------</code>\n\n"
            ),
            "SUCCESS_NODE_RECONNECTED_AFTER_ATTEMPTS": (
                "üü¢ <b>Node reconnected after several attempts</b>\n\n"
                "<b>Node:</b> <code>{node_name}</code>\n"
                #"<b>IP:</b> <code>{node_ip}</code>\n\n"
                "<code>---------------------------------</code>\n"
                "<b>Reconnected at:</b> {timestamp}\n"
                "<b>Downtime:</b> {downtime_minutes} minutes\n"
                "<b>Reconnect attempts:</b> {attempts}\n"
                "<code>---------------------------------</code>\n\n"
            ),
            "ERROR_NODE_DISCONNECTED": (
                "üî¥ <b>[ALERT]</b>\n\n"
                "<b>Node:</b> <code>{node_name}</code>\n"
                #"<b>IP:</b> <code>{node_ip}</code>\n\n"
                "<code>---------------------------------</code>\n"
                "<b>Error:</b> <code>{error_message}</code>\n"
                "<b>Reconnect attempt:</b> {timestamp}\n"
                "<code>---------------------------------</code>\n\n"
            ),
            "ERROR_NODE_RECONNECT_ATTEMPT": (
                "‚ö†Ô∏è <b>[Attempt {attempt}]</b>\n\n"
                "<b>Node:</b> <code>{node_name}</code>\n"
                #"<b>IP:</b> <code>{node_ip}</code>\n\n"
                "<code>---------------------------------</code>\n"
                "<b>Reconnect attempt:</b> {attempt}/{max_checks}\n"
                "<b>Time:</b> {timestamp}\n"
                "<code>---------------------------------</code>\n\n"
            ),
            "ERROR_NODE_RECONNECT_FAILED": (
                "üî¥ <b>[CRITICAL]</b>\n\n"
                "<b>Node:</b> <code>{node_name}</code>\n"
                #"<b>IP:</b> <code>{node_ip}</code>\n\n"
                "<code>---------------------------------</code>\n"
                "Failed to reconnect the node after {attempts} attempts.\n"
                "<b>Error:</b> <code>{error_message}</code>\n"
                "<b>Time:</b> {timestamp}\n"
                "<code>---------------------------------</code>\n\n"
            ),
            "ERROR_MONITOR_FAILURE": (
                "‚ùó <b>[ERROR]</b>\n\n"
                "<b>An error occurred during node monitoring.</b>\n\n"
                "<code>---------------------------------</code>\n"
                "<b>Error:</b> <code>{error_message}</code>\n"
                "<b>Time:</b> {timestamp}\n"
                "<code>---------------------------------</code>\n\n"
            ),
        },
    }

    @classmethod
    def get_message(cls, message_key, **kwargs):
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ —Ç–µ–∫—É—â–µ–º —è–∑—ã–∫–µ —Å –ø–æ–¥—Å—Ç–∞–Ω–æ–≤–∫–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö."""
        message_template = cls.MESSAGES[cls.LANG].get(message_key)
        if message_template:
            return message_template.format(**kwargs)
        return f"Message with key '{message_key}' not found."
